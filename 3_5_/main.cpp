/*//==============================================================================================================
Найдите приближенное решение метрической неориентированной задачи коммивояжера в полном графе (на плоскости) с
 помощью минимального остовного дерева.
Оцените качество приближения на случайном наборе точек, нормально распределенном на плоскости с дисперсией 1. Нормально
 распределенный набор точек получайте с помощью преобразования Бокса-Мюллера.
При фиксированном N, количестве вершин графа, несколько раз запустите оценку качества приближения. Вычислите среднее
 значение и среднеквадратичное отклонение качества приближения для данного N.
Запустите данный эксперимент для всех N в некотором диапазоне, например, [2, 10].
Автоматизируйте запуск экспериментов.
В решении требуется разумно разделить код на файлы. Каждому классу - свой заголовочный файл и файл с реализацией.

Для построения минимального остовного дерева используйте алгоритм Крускала.

В контесте протестируйте работу алгоритма построения минимального остовного дерева. (Варианты в контесте - не те,
который описаны здесь. Правильные варианты - здесь.)

*/ //==============================================================================================================
#include <iostream>
#include <iomanip>
#include "evaluation.h"
#include <Windows.h>

int main() {
    std::cout << std::fixed << std::setprecision(4); // красивый вывод
    for (int n = 2; n <= 10; ++n) {
        auto [mean, stddev] = Evaluation::evaluateApproximation(n, 100);
        // включаем русский язык
        SetConsoleOutputCP(CP_UTF8);
        setvbuf(stdout, nullptr, _IOFBF, 1000);
        std::cout << "N: " << n << " | Среднее: " << mean << " | Дисперсия: " << stddev << "\n";
    }

    return 0;
}